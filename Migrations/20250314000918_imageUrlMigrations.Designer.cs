// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bangazon.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    [Migration("20250314000918_imageUrlMigrations")]
    partial class imageUrlMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SellerId")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ZipCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Apple Rd.",
                            City = "Nashville",
                            FirstName = "Tion",
                            LastName = "Blackmon",
                            State = "TN",
                            UserId = 1,
                            ZipCode = 37000
                        },
                        new
                        {
                            Id = 2,
                            Address = "HQ",
                            City = "Nashville",
                            FirstName = "Admin",
                            LastName = "(SWE)",
                            State = "TN",
                            UserId = 2,
                            ZipCode = 37000
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("numeric");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("integer");

                    b.Property<int?>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("SellerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsCompleted = true,
                            OrderDate = new DateTime(2025, 3, 13, 19, 9, 17, 876, DateTimeKind.Local).AddTicks(4080),
                            OrderTotal = 25000m,
                            PaymentMethodId = 1
                        });
                });

            modelBuilder.Entity("Bangazon.Models.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("Bangazon.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SecurityCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNumber = "4444-4444-4444-4444",
                            CustomerId = 1,
                            ExpirationDate = new DateTime(2028, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityCode = 778
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.Property<int?>("SellerId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Graphics Cards",
                            Description = "The EVGA GeForce RTX 3060 12GB provides players with the ability to vanquish 1080p and 1440p gaming, while providing a quality NVIDIA RTX experience and a myriad of productivity benefits. The card is powered by NVIDIA Ampere architecture, which doubles down on ray tracing and AI performance with enhanced RT cores, Tensor Cores, and new streaming multiprocessors. With 12GB of GDDR6 memory, high-end performance does not have to be sacrificed to find a card for gaming and everyday use.",
                            Name = "EVGA GeForce RTX 3060 XC 12GB",
                            Price = 25000m,
                            QuantityAvailable = 25,
                            StoreId = 1,
                            imageUrl = "https://i.pinimg.com/originals/8c/4a/a4/8c4aa4434669caabab3ef0e0fea4958d.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Processors",
                            Description = "The AMD Ryzen 7 5800X is built on the Zen 3 architecture, offering 8 cores and 16 threads. With a base clock of 3.8 GHz and a max boost clock of 4.7 GHz, it's perfect for gaming, streaming, and content creation. The 5800X supports PCIe 4.0 and features an unlocked multiplier for overclocking enthusiasts.",
                            Name = "AMD Ryzen 7 5800X",
                            Price = 35000m,
                            QuantityAvailable = 15,
                            StoreId = 1,
                            imageUrl = "https://www.techinn.com/f/13795/137954422/amd-ryzen-7-5800x-3.8ghz.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Motherboards",
                            Description = "The ASUS ROG Strix B550-F Gaming motherboard is designed for AMD Ryzen processors and features PCIe 4.0 support, robust power delivery, and AI noise-canceling technology. It includes multiple M.2 slots, WiFi 6, and a high-performance VRM cooling solution for enhanced overclocking capabilities.",
                            Name = "ASUS ROG Strix B550-F Gaming",
                            Price = 18000m,
                            QuantityAvailable = 10,
                            StoreId = 1,
                            imageUrl = "https://images.anandtech.com/doci/15868/ROG-STRIX-B550-F-GAMING-WI-FI-What_s-inside-the-Box.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Memory",
                            Description = "Corsair Vengeance RGB Pro series DDR4 memory is designed for high-performance overclocking. It features dynamic multi-zone RGB lighting and is optimized for Intel and AMD platforms. The memory is built with a custom PCB and tightly screened memory chips to ensure excellent performance and stability.",
                            Name = "Corsair Vengeance RGB Pro 32GB (2 x 16GB) DDR4-3600",
                            Price = 15000m,
                            QuantityAvailable = 20,
                            StoreId = 1,
                            imageUrl = "https://pisces.bbystatic.com/image2/BestBuy_US/images/products/6449/6449223_sd.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Storage",
                            Description = "The Samsung 970 EVO Plus 1TB NVMe SSD delivers top-tier performance with read speeds up to 3,500 MB/s and write speeds up to 3,300 MB/s. Powered by Samsung's V-NAND technology, it ensures reliability and durability for demanding workloads and gaming.",
                            Name = "Samsung 970 EVO Plus 1TB NVMe SSD",
                            Price = 12000m,
                            QuantityAvailable = 30,
                            StoreId = 1,
                            imageUrl = "https://media.gamestop.com/i/gamestop/11165893_ALT03/Samsung-970-EVO-Plus-1TB-PCIe-3.0-NVMe-M.2-Internal-V-NAND-Solid-State-Drive?fmt=auto"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Power Supplies",
                            Description = "The Seasonic Focus GX-850 provides 850W of clean and stable power with 80 PLUS Gold efficiency. It's fully modular, ensuring easy cable management and reduced clutter. It features a 10-year warranty and premium hybrid fan control for silent operation.",
                            Name = "Seasonic Focus GX-850, 850W 80+ Gold",
                            Price = 14000m,
                            QuantityAvailable = 12,
                            StoreId = 1,
                            imageUrl = "https://www.cybertek.fr/images_produits/6674c605-41e1-4aa3-b679-3b1b7446a850.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Cooling",
                            Description = "The Noctua NH-D15 Chromax.Black is a premium dual-tower CPU cooler known for its outstanding cooling performance and quiet operation. It features six heat pipes, two NF-A15 140mm fans, and a sleek all-black design.",
                            Name = "Noctua NH-D15 Chromax.Black",
                            Price = 10000m,
                            QuantityAvailable = 18,
                            StoreId = 1,
                            imageUrl = "https://d.scdn.gr/images/sku_images/037632/37632247/20210121164405_b9029b13.jpeg"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Cases",
                            Description = "The Lian Li PC-O11 Dynamic is a premium mid-tower case designed for performance and aesthetics. It features a tempered glass front and side panel, support for multiple radiators, and excellent cable management options.",
                            Name = "Lian Li PC-O11 Dynamic",
                            Price = 13000m,
                            QuantityAvailable = 22,
                            StoreId = 1,
                            imageUrl = "https://www.profesionalreview.com/wp-content/uploads/2018/04/Lian-Li-PC-O11-Dynamic-un-chasis-con-mucho-cristal-1.jpg"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StoreId = 999,
                            UserId = 3,
                            Username = "Admin_SWE"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin Store",
                            SellerId = 1
                        });
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSeller = false,
                            Uid = "zmwuMjpI5RXABj6mImfK2O586Qf1"
                        },
                        new
                        {
                            Id = 2,
                            IsSeller = false,
                            Uid = "change-me"
                        },
                        new
                        {
                            Id = 3,
                            IsSeller = true,
                            Uid = "change-me-2"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Customer", b =>
                {
                    b.HasOne("Bangazon.Models.Seller", null)
                        .WithMany("Customers")
                        .HasForeignKey("SellerId");

                    b.HasOne("Bangazon.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.HasOne("Bangazon.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Seller", null)
                        .WithMany("Orders")
                        .HasForeignKey("SellerId");

                    b.Navigation("Customer");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("Bangazon.Models.OrderItems", b =>
                {
                    b.HasOne("Bangazon.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Bangazon.Models.PaymentMethod", b =>
                {
                    b.HasOne("Bangazon.Models.Customer", "Customer")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.HasOne("Bangazon.Models.Seller", null)
                        .WithMany("Products")
                        .HasForeignKey("SellerId");

                    b.HasOne("Bangazon.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Bangazon.Models.Seller", b =>
                {
                    b.HasOne("Bangazon.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bangazon.Models.Store", b =>
                {
                    b.HasOne("Bangazon.Models.Seller", "Seller")
                        .WithMany("Stores")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Bangazon.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("Bangazon.Models.Seller", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Orders");

                    b.Navigation("Products");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
